{"version":3,"sources":["components/Card/index.js","pokeball.svg","components/Nav/index.js","services/allPokemon.js","pages/Home/index.js","helpers/typeColours.js","helpers/eraser.js","pages/PokeDetail/index.js","App.js","reportWebVitals.js","index.js"],"names":["Card","pokemon","className","name","id","src","sprites","other","front_default","alt","Nav","container","direction","alignItems","justify","to","Box","maxWidth","m","Logo","getPokemon","url","Promise","resolve","reject","fetch","then","res","json","data","getAllPokemon","a","Home","useState","pokemonData","setPokemonData","nextUrl","setNextUrl","prevUrl","setPrevUrl","loading","setLoading","initialURL","useEffect","response","next","previous","loadPokemon","results","fetchData","prev","all","map","pokemonRecord","_pokemonData","Container","style","textAlign","IconButton","variant","color","onClick","i","typeColors","bug","dragon","fairy","fire","ghost","ground","normal","pyschic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","eraseArrow","aboutText","document","querySelector","innerHTML","console","log","replace","ItemDetail","history","useHistory","pokename","useParams","useLocation","item","setItem","specieItem","setSpecieItem","image_url","setImage_url","usePalette","error","setEvolutionChain","pokeURL","specieURL","pokeRes","dream_world","specieRes","evolution_chain","evoRes","chain","vibrant","darkVibrant","gradient","background","goBack","height","weight","types","type","backgroundColor","flavor_text_entries","flavor_text","stats","stat","base_stat","App","basename","process","path","exact","component","PokeDetail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.74301565.chunk.js","sourcesContent":["import \"./style.scss\";\r\n\r\nfunction Card({ pokemon }) {\r\n  return (\r\n    <div className=\"card-body-wrapper\">\r\n      <div className=\"card-name\">\r\n        <h4>{pokemon.name}</h4>\r\n        <span>#{pokemon.id}</span>\r\n      </div>\r\n      <div className=\"card-img\">\r\n        <div className=\"sprite-wrapper\">\r\n          <img\r\n            className=\"sprite_img\"\r\n            src={pokemon.sprites.other[\"official-artwork\"].front_default}\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"Card__types\">\r\n        {pokemon.types.map((type, i) => {\r\n          return (\r\n            <div\r\n              key={i}\r\n              className=\"Card__type\"\r\n              style={{ backgroundColor: typeColors[type.type.name] }}\r\n            >\r\n              {type.type.name}\r\n            </div>\r\n          );\r\n        })}\r\n      </div> */}\r\n      {/* <div className=\"Card__info\">\r\n        <div className=\"Card__data Card__data--weight\">\r\n          <p className=\"title\">Weight</p>\r\n          <p>{pokemon.weight}</p>\r\n        </div>\r\n        <div className=\"Card__data Card__data--weight\">\r\n          <p className=\"title\">Height</p>\r\n          <p>{pokemon.height}</p>\r\n        </div>\r\n        <div className=\"Card__data Card__data--ability\">\r\n          <p className=\"title\">Ability</p>\r\n          <p>{pokemon.abilities[0].ability.name}</p>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","export default __webpack_public_path__ + \"static/media/pokeball.e57f7ae6.svg\";","import Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"./style.scss\";\r\nimport Logo from \"../../pokeball.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <>\r\n      <div\r\n        container\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        className=\"nav-wrapper\"\r\n      >\r\n        <Link to=\"/\" className=\"logo-link\">\r\n          <Box maxWidth={30} m={1} className=\"logo-wrapper\">\r\n            <img src={Logo} alt=\"\" className=\"logo-img\" />\r\n          </Box>\r\n          <Box>\r\n            {\" \"}\r\n            <h2 className=\"logo-h2\">Pokedex</h2>\r\n          </Box>\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","export function getPokemon({ url }) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        resolve(data);\r\n      });\r\n  });\r\n}\r\n\r\nexport async function getAllPokemon(url) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        resolve(data);\r\n      });\r\n  });\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"../../components/Card\";\r\nimport Nav from \"../../components/Nav\";\r\nimport { getPokemon, getAllPokemon } from \"../../services/allPokemon\";\r\nimport \"./style.scss\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\n\r\nfunction Home() {\r\n  const [pokemonData, setPokemonData] = useState([]);\r\n  const [nextUrl, setNextUrl] = useState(\"\");\r\n  const [prevUrl, setPrevUrl] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const initialURL = \"https://pokeapi.co/api/v2/pokemon\";\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let response = await getAllPokemon(initialURL);\r\n      setNextUrl(response.next);\r\n      setPrevUrl(response.previous);\r\n      await loadPokemon(response.results);\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  const next = async () => {\r\n    setLoading(true);\r\n    let data = await getAllPokemon(nextUrl);\r\n    await loadPokemon(data.results);\r\n    setNextUrl(data.next);\r\n    setPrevUrl(data.previous);\r\n    setLoading(false);\r\n  };\r\n\r\n  const prev = async () => {\r\n    if (!prevUrl) return;\r\n    setLoading(true);\r\n    let data = await getAllPokemon(prevUrl);\r\n    await loadPokemon(data.results);\r\n    setNextUrl(data.next);\r\n    setPrevUrl(data.previous);\r\n    setLoading(false);\r\n  };\r\n\r\n  const loadPokemon = async (data) => {\r\n    let _pokemonData = await Promise.all(\r\n      data.map(async (pokemon) => {\r\n        let pokemonRecord = await getPokemon(pokemon);\r\n        return pokemonRecord;\r\n      })\r\n    );\r\n    setPokemonData(_pokemonData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <Container>\r\n        {loading ? (\r\n          <h1 style={{ textAlign: \"center\" }}>Loading...</h1>\r\n        ) : (\r\n          <>\r\n            <Box>\r\n              <IconButton variant=\"outlined\" color=\"primary\" onClick={prev}>\r\n                <NavigateBeforeIcon />\r\n              </IconButton>\r\n              <IconButton variant=\"outlined\" color=\"primary\" onClick={next}>\r\n                <NavigateNextIcon />\r\n              </IconButton>\r\n            </Box>\r\n            <div className=\"grid-home\">\r\n              {pokemonData.map((pokemon, i) => (\r\n                <div m={2} key={i} className=\"box-wrapper\">\r\n                  <Link to={`/${pokemon.name}`} className=\"link-title\">\r\n                    <Card\r\n                      url={pokemon.url}\r\n                      key={i}\r\n                      pokemon={pokemon}\r\n                      className=\"card-wrapper\"\r\n                    />\r\n                  </Link>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <Box>\r\n              <IconButton variant=\"outlined\" color=\"primary\" onClick={prev}>\r\n                <NavigateBeforeIcon />\r\n              </IconButton>\r\n              <IconButton variant=\"outlined\" color=\"primary\" onClick={next}>\r\n                <NavigateNextIcon />\r\n              </IconButton>\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","const typeColors = {\r\n  bug: \"#729f3f\",\r\n  dragon: \"#53a4cf\",\r\n  fairy: \"#fdb9e9\",\r\n  fire: \"#fd7d24\",\r\n  ghost: \"#7b62a3\",\r\n  ground: \"#f7de3f\",\r\n  normal: \"#a4acaf\",\r\n  pyschic: \"#f366b9\",\r\n  steel: \"#9eb7b\",\r\n  dark: \"#707070\",\r\n  electric: \"#eed535\",\r\n  fighting: \"#d56723\",\r\n  flying: \"#3dc7ef\",\r\n  grass: \"#9bcc50\",\r\n  ice: \"#51c4e7\",\r\n  poison: \"#b97fc9\",\r\n  rock: \"#a38c21\",\r\n  water: \"#4592c4\",\r\n};\r\n\r\nexport default typeColors;\r\n","function eraseArrow() {\r\n  const aboutText = document.querySelector(\".about-text\").innerHTML;\r\n\r\n  // document.body.innerHTML = document.body.innerHTML.replace(/\\u00AD/g, \"\");\r\n  console.log(aboutText);\r\n  aboutText.replace(/\\u00AD/g, \" \");\r\n}\r\n\r\nexport default eraseArrow;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./style.scss\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport typeColors from \"../../helpers/typeColours\";\r\nimport eraseArrow from \"../../helpers/eraser\";\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport { usePalette } from \"react-palette\";\r\nimport { getPokemon, getAllPokemon } from \"../../services/allPokemon\";\r\n\r\nfunction ItemDetail() {\r\n  const history = useHistory();\r\n  const { pokename } = useParams();\r\n  const location = useLocation();\r\n  const [item, setItem] = useState([]);\r\n  const [specieItem, setSpecieItem] = useState([]);\r\n  const [image_url, setImage_url] = useState(\"\");\r\n  const { data, error } = usePalette(image_url);\r\n  const [loading, setLoading] = useState(true);\r\n  const [evolutionChain, setEvolutionChain] = useState([]);\r\n  const [recordedEvo, setRecordedEvo] = useState([]);\r\n\r\n  const pokeURL = `https://pokeapi.co/api/v2/pokemon/${pokename}`;\r\n  const specieURL = `https://pokeapi.co/api/v2/pokemon-species/${pokename}`;\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let pokeRes = await getAllPokemon(pokeURL);\r\n      setItem(pokeRes);\r\n      setImage_url(pokeRes.sprites.other.dream_world.front_default);\r\n      let specieRes = await getAllPokemon(specieURL);\r\n      setSpecieItem(specieRes);\r\n      let evoRes = await getAllPokemon(specieRes.evolution_chain.url);\r\n      //   setevolutionChain(evoRes.chain.evolves_to[0].evolves_to[0].species.name);\r\n      setEvolutionChain(evoRes.chain);\r\n      setLoading(false);\r\n      await eraseArrow();\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  console.log(\"color\", data);\r\n  const mystyle = {\r\n    background: `linear-gradient(to right, ${data.vibrant}, ${data.darkVibrant})`,\r\n  };\r\n  const lighten = {\r\n    // background: `lighten(${data.vibrant}, 50%)`,\r\n    background: `${data.vibrant}`,\r\n  };\r\n  const gradient = {\r\n    background: `linear-gradient(130deg, rgba(255,255,255,0.5130427170868348) -3%, ${data.vibrant} 50%, ${data.vibrant} 5%`,\r\n  };\r\n  // const gradient = {\r\n  //   background: `linear-gradient(130deg, rgba(255,255,255,0.5130427170868348) 0%, ${data.vibrant} 100%)`,\r\n  // };\r\n  return (\r\n    <div className=\"container-wrapper\" style={gradient}>\r\n      {loading ? (\r\n        <h1 style={{ textAlign: \"center\" }}>Loading...</h1>\r\n      ) : (\r\n        <>\r\n          <Box>\r\n            <IconButton\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              className=\"backButton\"\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n            >\r\n              <NavigateBeforeIcon />\r\n            </IconButton>\r\n          </Box>\r\n\r\n          <Box className=\"item-bod\">\r\n            <Box className=\"detail-bod\" height=\"100%\">\r\n              <Box className=\"detail-name\">\r\n                <Box className=\"box-name\">\r\n                  <p>{item.name}</p>\r\n                  <span>#{item.id}</span>\r\n                </Box>\r\n              </Box>\r\n              {/* <Box className=\"front-sprite-wrapper\">\r\n                <img\r\n                  src={item.sprites.other[\"official-artwork\"].front_default}\r\n                  alt=\"\"\r\n                />\r\n              </Box> */}\r\n              <Box className=\"weight-data\">\r\n                <p>\r\n                  Height: <span>{item.height}m </span>\r\n                </p>\r\n\r\n                <p>\r\n                  Weight: <span>{item.weight}kg</span>\r\n                </p>\r\n\r\n                {/* <div className=\"table-wrapper\">\r\n                  <div className=\"table-title\">\r\n                    <span>Egg Groups</span>\r\n                  </div>\r\n                  <div className=\"table-content\">\r\n                    {specieItem.egg_groups.map((egg, i) => {\r\n                      return (\r\n                        <p className=\"table-content abilities\" key={i}>\r\n                          {egg.name}\r\n                          {i < specieItem.egg_groups.length - 1\r\n                            ? \",\\u00A0\"\r\n                            : \"\"}\r\n                        </p>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div> */}\r\n                {/* <div className=\"table-wrapper\">\r\n                  <div className=\"table-title\">\r\n                    <span>Base Hapiness</span>\r\n                  </div>\r\n                  <div className=\"table-content\">\r\n                    <p>{specieItem.base_happiness}</p>\r\n                  </div>\r\n                </div> */}\r\n                {/* <div className=\"table-wrapper\">\r\n                  <div className=\"table-title\">\r\n                    <span>Habitat</span>\r\n                  </div>\r\n                  <div className=\"table-content\">\r\n                    {specieItem.habitat === null ? (\r\n                      <p> No data </p>\r\n                    ) : (\r\n                      <p className=\"table-content abilities\">\r\n                        {specieItem.habitat.name}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"table-wrapper\">\r\n                  <div className=\"table-title\">\r\n                    <span>Abilities</span>\r\n                  </div>\r\n                  {item.abilities.map((ability, i) => {\r\n                    return (\r\n                      <p className=\"table-content abilities\" key={i}>\r\n                        {ability.ability.name}\r\n                        {i < item.abilities.length - 1 ? \",\\u00A0\" : \"\"}\r\n                      </p>\r\n                    );\r\n                  })}\r\n                </div> */}\r\n              </Box>\r\n            </Box>\r\n            <Box className=\"picture-bod\">\r\n              <Box className=\"front-sprite-wrapper\">\r\n                <img\r\n                  src={item.sprites.other[\"official-artwork\"].front_default}\r\n                  alt=\"\"\r\n                />\r\n              </Box>\r\n            </Box>\r\n            <Box className=\"statistics-bod\">\r\n              <Box>\r\n                <div className=\"Card__types\">\r\n                  {item.types.map((type, i) => {\r\n                    return (\r\n                      <div\r\n                        key={i}\r\n                        className=\"Card__type\"\r\n                        style={{\r\n                          backgroundColor: typeColors[type.type.name],\r\n                        }}\r\n                      >\r\n                        {type.type.name}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </Box>\r\n              <Box className=\"description-wrapper\">\r\n                <h2>About</h2>\r\n                <p className=\"about-text\">\r\n                  {specieItem.flavor_text_entries[0].flavor_text}\r\n                </p>\r\n              </Box>\r\n              {/* <Box className=\"attack-data\">\r\n                {specieItem.evolves_from_species == undefined ? (\r\n                  <div>It's first </div>\r\n                ) : (\r\n                  <p>Evolves from: {specieItem.evolves_from_species.name}</p>\r\n                )}\r\n              </Box> */}\r\n\r\n              <Box className=\"stats-name\">\r\n                <h2>Base Stats</h2>\r\n                {item.stats.map((stat, i) => {\r\n                  return (\r\n                    // <Box key={i}>\r\n                    //   <h3>\r\n                    //     {stat.stat.name}: {stat.base_stat}\r\n                    //   </h3>\r\n                    // </Box>\r\n                    <div key={i} className=\"stat-box\">\r\n                      {stat.stat.name}: {stat.base_stat}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemDetail;\r\n","import \"./App.css\";\nimport Home from \"./pages/Home\";\nimport ItemDetail from \"./pages/ItemDetail\";\nimport PokeDetail from \"./pages/PokeDetail\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/:pokename\" exact component={PokeDetail} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}